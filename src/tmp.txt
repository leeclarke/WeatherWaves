TODO: 
1. Finish bot replace capability.
X. Test all JSON WS functions [done]
3. Add App Engine Index page.
4. Write Docs
5. Test on Android 
6. Ant Build Script and download files.
7. Convert from log4j to Java logger to get rid of dependancy.
8. JavaDoc/code review



Example Remove a file from history::

git filter-branch --index-filter 'git update-index --remove test/org/dragonfly/wunderground/service/TestSaxFeedParser.java' master

//class -
package org.dragonfly.weatherwave;

import java.util.List;

import org.dragonfly.wunderground.domain.Alert;
import org.dragonfly.wunderground.domain.DragonflyDomain;
import org.dragonfly.wunderground.domain.Forecast;
import org.dragonfly.wunderground.domain.Location;
import org.dragonfly.wunderground.domain.WeatherObservation;

/**
 * Responsible for rendering the Weather objects in a lovely HTML format. (Basically this is my view which sadly is put
 * together like a 2001 Servlet. fun!)
 * 
 * @author leeclarke
 */
public class WeatherHTMLRenderer
{
	//TODO: Create keyword Map for Weather Condition --> Image icon 
	/**
	 * Renders a predefined HTML format for a given DragonflyDomain Collection.
	 * @param rootList
	 * @return
	 */
	public static String renderHTML(List<? extends DragonflyDomain> rootList)
	{
		StringBuilder sb = new StringBuilder();
		if(rootList != null && rootList.size()>0)
		{
			DragonflyDomain tmp = rootList.get(0);
			if(tmp instanceof WeatherObservation)
			{
				for (DragonflyDomain dragonflyDomain : rootList)
				{
					sb.append(renderCurrentConditions((WeatherObservation)dragonflyDomain));
				}
			}
			else if(tmp instanceof Forecast)
			{
				for (DragonflyDomain dragonflyDomain : rootList)
				{
					sb.append(renderForecast((Forecast)dragonflyDomain));
				}
			}
			if(tmp instanceof Alert)
			{
				for (DragonflyDomain dragonflyDomain : rootList)
				{
					sb.append(renderAlerts((Alert)dragonflyDomain));
				}
			}
			else if(tmp instanceof Location)
			{
				for (DragonflyDomain dragonflyDomain : rootList)
				{
					sb.append(renderLocations((Location)dragonflyDomain));
				}
			}
		}
		
		return sb.toString();
	}
	
	/**
	 * Renders a predefined HTML format for a given DragonflyDomain Object.
	 * @param rootObject
	 * @return
	 */
	public static String renderHTML(DragonflyDomain rootObject)
	{
		StringBuilder sb = new StringBuilder();
		if(rootObject != null)
		{
			if(rootObject instanceof WeatherObservation)
					sb.append(renderCurrentConditions((WeatherObservation)rootObject));
			else if(rootObject instanceof Forecast)
					sb.append(renderForecast((Forecast)rootObject));
			else if(rootObject instanceof Alert)
					sb.append(renderAlerts((Alert)rootObject));
			else if(rootObject instanceof Location)
					sb.append(renderLocations((Location)rootObject));
		}
		
		return sb.toString();
	}
	
	protected static String renderCurrentConditions(WeatherObservation obs)
	{
		StringBuilder sb = new StringBuilder();
		if(obs != null)
		{
			sb.append("<table>");
			sb.append("<tr><th colspan='2'>").append("").append("</th></tr>");
			sb.append("<tr><td>").append("").append("</td></tr>");
			sb.append("<tr><td>").append("").append("</td></tr>");
			sb.append("</table>");
		}
		
		return sb.toString();
	}
	
	protected static String renderLocations(Location loc)
	{
		// TODO Auto-generated method stub
		StringBuilder sb = new StringBuilder();
		if(loc != null)
		{
			
		}
		
		return sb.toString();
	}

	protected static String renderAlerts(Alert alert)
	{
		// TODO Auto-generated method stub
		StringBuilder sb = new StringBuilder();
		if(alert != null)
		{
			
		}
		
		return sb.toString();
	}

	protected static String renderForecast(Forecast forecast)
	{
		// TODO Auto-generated method stub
		StringBuilder sb = new StringBuilder();
		if(forecast != null)
		{
			
		}
		
		return sb.toString();
	}
}

--html sample
<HTML>
	<body>
		<table bordercolor='3399ff' border='1' cellpadding='0' cellspacing='0'>
			<tr><td>
			<table>
				<tr><td colspan='3'><table width='100%' bgcolor="3399ff" cellpadding='0' cellspacing='0'><tr><th>&nbsp;&nbsp;Current conditions at Tampa, FL 33602&nbsp;&nbsp;</th><td><img src='http://icons-ecast.wxug.com/i/c/a/clear.gif'/></td></tr></table></td></tr>
				<tr><td colspan='3' bgcolor="FFFFCC">Last Updated on June 24, 10:40 AM EDT</td></tr>
				<tr><th bgcolor="FFFFCC" align='left'>Temperature:</th><td bgcolor="FFFFCC" align='left'>88 F</td><td bgcolor="FFFFCC" align='left'>31 C</td></tr>
				<tr><th bgcolor="FFFFCC" align='left'>Humidity:</th><td bgcolor="FFFFCC" align='left' colspan='2'>66%</td></tr>
				<tr><th bgcolor="FFFFCC" align='left'>Wind:</th><td bgcolor="FFFFCC" align='left' colspan='2'>From the East at 6 MPH</td></tr>
				<tr><th bgcolor="FFFFCC" align='left'>Barometric Pressure:</th><td bgcolor="FFFFCC" align='left' colspan='2'>30.10 in (1019 mb)</td></tr>
				<tr><th bgcolor="FFFFCC" align='left'>DewPoint:</th><td bgcolor="FFFFCC" align='left' colspan='2'>75 F (24 C)</td></tr>
				<tr><th bgcolor="FFFFCC" align='left'>Heat Index:</th><td bgcolor="FFFFCC" align='left' colspan='2'>98 F (36 C)</td></tr>
				<tr><th bgcolor="FFFFCC" align='left'>Wind Chill:</th><td bgcolor="FFFFCC" align='left' colspan='2'>NA</td></tr>
				<tr><th bgcolor="FFFFCC" align='left'>Visibility:</th><td bgcolor="FFFFCC" align='left' colspan='2'>10.0 mi (16.1 km)</td></tr>
			</table>
			</td></tr>
		</table>
	</body>
</HTML>